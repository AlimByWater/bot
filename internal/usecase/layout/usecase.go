package layout

import (
	"arimadj-helper/internal/entity"
	"context"
	"log/slog"
	"sync"
)

// cacheUC –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫—ç—à–µ–º
type cacheUC interface {
	Get(ctx context.Context, key string) (interface{}, error)
	Set(ctx context.Context, key string, value interface{}, expiration time.Duration) error
	Delete(ctx context.Context, key string) error
}

// repoUC –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º –º–∞–∫–µ—Ç–æ–≤
type repoUC interface {
	LayoutByUserID(ctx context.Context, userID int) (entity.UserLayout, error)
	LayoutByID(ctx context.Context, layoutID string) (entity.UserLayout, error)
	UpdateLayout(ctx context.Context, layout entity.UserLayout) error
	LogLayoutChange(ctx context.Context, change entity.LayoutChange) error
	IsLayoutOwner(ctx context.Context, layoutID string, userID int) (bool, error)
	AddLayoutEditor(ctx context.Context, layoutID string, editorID int) error
	RemoveLayoutEditor(ctx context.Context, layoutID string, editorID int) error
	GetDefaultLayout(ctx context.Context) (entity.UserLayout, error)
}

// Module –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –º–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–∞–∫–µ—Ç–∞–º–∏
type Module struct {
	logger *slog.Logger
	ctx    context.Context

	cache cacheUC
	repo  repoUC
	mu    sync.Mutex
}

// New —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –º–æ–¥—É–ª—è –º–∞–∫–µ—Ç–æ–≤
func New(cache cacheUC, repo repoUC) *Module {
	return &Module{
		cache: cache,
		repo:  repo,
	}
}

// Init –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –º–æ–¥—É–ª—å –º–∞–∫–µ—Ç–æ–≤
func (m *Module) Init(ctx context.Context, logger *slog.Logger) error {
	m.ctx = ctx
	m.logger = logger.With(slog.StringValue("üì± LAYOUT"))

	return nil
}
